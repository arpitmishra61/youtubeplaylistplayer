{"version":3,"sources":["actions/videoAction.js","components/VideoPlayer.js","components/SideBar.js","components/Home.js","components/Navbar.js","reducers/videoScreenReducer.js","reducers/rootReducer.js","store.js","App.js","serviceWorker.js","index.js"],"names":["addVideoToScreen","videoData","dispatch","localStorage","setItem","JSON","stringify","video","payload","type","VideoPlayer","className","this","props","videoFlag","onClick","window","confirm","YouTube","videoId","id","opts","height","width","playerVars","autoplay","onEnd","e","currentVideo","videos","indexCurrentVideo","findIndex","length","document","querySelector","scrollTo","src","alt","Component","connect","state","SideBar","error","deleteVideo","remaningVideos","filter","cVideo","addVideosToQueue","setState","queueFlag","validateYouTubeUrl","youtubeUrl","url","urlMain","String","substring","urlListIndex","search","urlVideoId","urlListId","videoIdValid","axios","get","then","res1","data","items","res2","dataVideo","videosFetched","forEach","videoToAdd","snippet","resourceId","title","img","thumbnails","high","channelTitle","push","catch","err","style","backgroundColor","paddingBottom","overflowY","data-toggle","data-target","map","key","cursor","target","classList","contains","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","placeholder","value","videosLocalStorage","getItem","videoLocalStorage","parse","videosData","removeItem","Home","Navbar","href","initialState","combineReducers","action","middleware","applyMiddleware","thunk","store","createStore","rootReducer","composeWithDevTools","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8NACcA,EAAkB,SAACC,GAAD,OAAa,SAAAC,GACxC,OADmDC,aAAaC,QAAQ,QAASC,KAAKC,UAAWL,EAAUM,QACpGL,EAAS,CACjBM,QAAQP,EACRQ,KAAK,uBCGHC,E,iLAEQ,IAAD,OAOL,OACI,yBAAKC,UAAU,mBACTC,KAAKC,MAAMC,UAKb,6BACE,4BAAQH,UAAU,yBAAyBI,QAAS,WAC/CC,OAAOC,QAAQ,kBAClB,EAAKJ,MAAMb,iBAAiB,CAC1BO,MAAM,GACNO,WAAU,MAJd,sBAWC,kBAACI,EAAA,EAAD,CACXC,QAASP,KAAKC,MAAMN,MAAMa,GAC1BC,KA5BoB,CACtBC,OAAQ,QACRC,MAAO,OACPC,WAAY,CACVC,SAAU,IA0BZC,MAAO,SAACC,GAGN,IAAMC,EAAa,EAAKf,MAAMN,MACxBsB,EAAO,EAAKhB,MAAMgB,OACnBC,EAAmBD,EAAOE,WAAU,SAACxB,GAK9C,OAAOqB,EAAaR,KAAKb,EAAMa,MAIzBU,IAAoBD,EAAOG,OAAO,GAGjCC,SAASC,cAAc,YAAYC,SAAS,EAAE,KAAKL,EAAkB,IAErE,EAAKjB,MAAMb,iBAAiB,CAACO,MAAMsB,EAAOC,EAAkB,OAG5D,EAAKjB,MAAMb,iBAAiB,CAACO,MAAMsB,EAAO,KAC1CI,SAASC,cAAc,YAAYC,SAAS,EAAE,QA5ChB,yBAAKxB,UAAU,eACpC,iDACA,yBAAKyB,IAAI,4DAA4DC,IAAI,GAAGd,MAAM,gB,GAb5Ee,aAgFXC,eAPO,SAACC,GAAD,MAAU,CAC5BjC,MAAMiC,EAAMvC,UAAUM,MACtBO,UAAU0B,EAAMvC,UAAUa,UAC1Be,OAAOW,EAAMvC,UAAU4B,UAIY,CAAC7B,oBAAzBuC,CAA4C7B,G,yBChFpD+B,E,2MACFD,MAAM,CACPE,OAAM,G,EAGVC,YAAY,SAACpC,GAAU,GAAGS,OAAOC,QAAQ,4BAA8B,CAAC,IAAM2B,EAAe,EAAK/B,MAAMgB,OAAOgB,QAAO,SAACC,GAAD,OAAUA,EAAO1B,KAAKb,EAAMa,MAC1IwB,EAAeZ,OAmBpB,EAAKnB,MAAMN,OAEV,EAAKM,MAAMN,MAAMa,KAAKb,EAAMa,IAEhC,EAAKP,MAAMkC,iBACT,CAAClB,OAAOe,IAGV,EAAK/B,MAAMb,iBAAiB,CAChBO,MAAM,GACNO,WAAU,KAgBtB,EAAKD,MAAMkC,iBAAiB,CAC5BlB,OAAOe,KA3CC,EAAKI,SAAS,CACVN,OAAM,IAEV,EAAK7B,MAAMb,iBAAiB,CACxBO,MAAM,GACNO,WAAU,IAGd,EAAKD,MAAMkC,iBAAiB,CACxBlB,OAAO,GACPoB,WAAU,O,EAqCpBC,mBAAmB,SAACC,GACrB,IAAMC,EAAID,EAGLE,EAAQC,OAAOF,GAAKG,UAAU,EAAE,IAChCC,EAAaJ,EAAIK,OAAO,UACxBC,EAAWN,EAAIG,UAAU,GAAGC,GAC5BG,EAAUP,EAAIG,UAAUC,EAAa,EAAEJ,EAAIpB,QAC7C4B,GAAa,EAGJ,qCAAVP,IAAgE,IAAhBG,EAClDK,IAAMC,IAAN,uEAA0EJ,EAA1E,iDAAoIK,MAAK,SAACC,GAEpIA,EAAKC,KAAKC,MAAMlC,SACnB4B,GAAa,GAEbC,IAAMC,IAAN,qHAAwHH,EAAxH,iDAAiLI,MAAK,SAACI,GACnL,GAAGA,EAAKF,KAAKC,MAAMlC,OACnB,CAGQ,IAAMoC,EAAUD,EAAKF,KAAKC,MAEpBG,EAAc,GACpBD,EAAUE,SAAQ,SAACL,GACf,IAAMM,EAAW,CACjBnD,GAAG6C,EAAKO,QAAQC,WAAWtD,QAC3BuD,MAAMT,EAAKO,QAAQE,MACnBC,IAAIV,EAAKO,QAAQI,WAAWC,KAC5BC,aAAab,EAAKO,QAAQM,cAG9BT,EAAcU,KAAKR,MAOvB,EAAK1D,MAAMkC,iBAAiB,CAAClB,OAAO,GAAD,mBAAK,EAAKhB,MAAMgB,QAAUwC,GAAepB,WAAU,IACtF,EAAKD,SAAS,CACVN,OAAM,IAKCkB,GAEnB,EAAKZ,SAAS,CACTN,OAAM,OAMZsC,OAAM,SAACC,GACN,EAAKjC,SAAS,CACTN,OAAM,UAQV,EAAKM,SAAS,CACVN,OAAM,K,wEAOD,IAAD,OAKL,OACI,yBAAK/B,UAAU,UAAUuE,MAAO,CAAC5D,OAAO,OAChD6D,gBAAiB,qBACjBC,cAAe,MACfC,UAAU,WACE,yBAAK1E,UAAU,qBACZ,6BACI,yBAAKA,UAAU,kBACV,4BAAQA,UAAU,mCAAmCI,QAAS,WACvDC,OAAOC,QAAQ,qBAEd,EAAK+B,SAAS,CACVN,OAAM,IAEV,EAAK7B,MAAMkC,iBAAiB,CACxBlB,OAAO,GACPoB,WAAU,IAEd,EAAKpC,MAAMb,iBAAiB,CACxBO,MAAM,GACNO,WAAU,OAZtB,eAiB3BF,KAAK4B,MAAME,MAAO,wBAAI/B,UAAU,4BAAd,eAA0D,KAEtD,wBAAIA,UAAU,kBAAd,eAGC,4BAAQA,UAAU,6CAA8C2E,cAAY,QAAQC,cAAY,iBAAhG,SA7BZ,IAkCW,yBAAK5E,UAAU,WAChBC,KAAKC,MAAMoC,UAAuH,6BAE3HrC,KAAKC,MAAMgB,OAAO2D,KAAI,SAACjF,EAAMkF,GAAP,OAAc,yBAAK9E,UAAU,eAAe8E,IAAKA,GACpE,yBAAK9E,UAAU,cAAcuE,MAAO,CAACQ,OAAO,WAAY3E,QAAS,SAACY,GAC1DA,EAAEgE,OAAOC,UAAUC,SAAS,aAE/BlE,EAAEgE,OAAOC,UAAUC,SAAS,UAG/B,EAAKhF,MAAMb,iBAAiB,CAACO,MAAMA,EAAMO,WAAU,MAG7C,yBAAKH,UAAU,0BACf,yBAAKyB,IAAK7B,EAAMoE,IAAIvB,IAAKf,IAAI,GAAGd,MAAM,OACtCD,OAAO,UAGT,yBAAKX,UAAU,gBAC7C,yBAAKA,UAAU,QAAO,uBAAGA,UAAU,wCAAwCI,QAAS,kBAAI,EAAK4B,YAAYpC,OACzG,wBAAII,UAAU,kBAAkBJ,EAAMmE,OACtC,uBAAG/D,UAAU,iBAAkB,IAAKJ,EAAMuE,cACzC,EAAKjE,MAAMN,MAAMa,IAClB,EAAKP,MAAMN,MAAMa,KAAKb,EAAMa,GAE5B,wBAAKT,UAAU,8BAAf,qBAA6E,YAxBzC,wBAAIA,UAAU,8DAAd,8BAsCpB,yBAAKA,UAAU,aAAaS,GAAG,eAAe0E,SAAS,KAAKC,KAAK,SAASC,kBAAgB,oBAAoBC,cAAY,QAChJ,yBAAKtF,UAAU,eAAeoF,KAAK,YACjC,yBAAKpF,UAAU,iBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,cAAcS,GAAG,qBAA/B,yBACA,4BAAQX,KAAK,SAASE,UAAU,QAAQuF,eAAa,QAAQC,aAAW,SACtE,0BAAMF,cAAY,QAAlB,UAIJ,yBAAKtF,UAAU,cACd,2BAAOF,KAAK,OAAOE,UAAU,wBAAwByF,YAAY,sBAElE,yBAAKzF,UAAU,gBAIb,4BAAQF,KAAK,SAASE,UAAU,oBAAoBuF,eAAa,SAAjE,SACA,4BAAQzF,KAAK,SAASE,UAAU,kBAAkBuF,eAAa,QAAQnF,QAAS,WAC5E,IAAIqC,EAAInB,SAASC,cAAc,aAAamE,MAE5C,EAAKnD,mBAAmBE,KAH5B,kB,0CAoBA,GAAG,WAAYjD,aAEhB,CAAC,IAAImG,EACHnG,aAAaoG,QAAQ,UACnBC,EAAmBrG,aAAaoG,QAAQ,SAErCD,GAEC1F,KAAKC,MAAMkC,iBACP,CAAClB,OACDxB,KAAKoG,MAAMH,GACXrD,WAAU,IAMduD,GAAyD,KAAhCnG,KAAKoG,MAAMD,IAIpC5F,KAAKC,MAAMb,iBACP,CAACO,MACAF,KAAKoG,MAAMD,GACZ1F,WAAU,SAUpBX,aAAaC,QAAQ,SAAS,IAC/BD,aAAaC,QAAQ,QAAQ,Q,GA1RdkC,aA0SRC,eARO,SAACC,GAEnB,MAAO,CACPX,OAAOW,EAAMvC,UAAU4B,OACvBoB,UAAUT,EAAMvC,UAAUgD,UAC1B1C,MAAMiC,EAAMvC,UAAUM,SAGa,CAACwC,iBF1SV,SAAC2D,GAAD,OAAc,SAAAxG,GAOxC,OANIwG,EAAW7E,OAAOG,OAItB7B,aAAaC,QAAQ,SAASC,KAAKC,UAAWoG,EAAW7E,SAHxD1B,aAAawG,WAAW,UAKlBzG,EAAS,CAChBM,QAAQkG,EACRjG,KAAK,uBEiSgDT,oBAA1CuC,CAA6DE,GC7S7D,SAASmE,IACpB,OACI,yBAAMjG,UAAU,YACZ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,kBAAC,EAAD,OAEJ,yBAAKA,UAAU,YAEX,kBAAC,EAAD,CAASuE,MAAO,CAAC5D,OAAO,OACxC6D,gBAAiB,qBACjBC,cAAe,MACfC,UAAU,eCdC,SAASwB,IACpB,OACI,yBAAKlG,UAAU,qDAEX,uBAAGmG,KAAK,KAAKnG,UAAU,gBAAvB,iB,2BCLNoG,EAAa,CACfxG,MAAM,GACNO,WAAU,EACVe,OAAO,GACPoB,WAAU,GCDC+D,4BAAgB,CAC3B/G,UDGW,WAA8B,IAA7BuC,EAA4B,uDAAtBuE,EAAaE,EAAS,uCAExC,OAAOA,EAAOxG,MACV,IAAK,mBAEL,IAAK,mBAAoB,OAAO,eAAK+B,EAAZ,GAAqByE,EAAOzG,SAErD,QAAS,OAAOgC,M,QETlB0E,EAAWC,0BAAgBC,KAKlBC,EAJHC,sBACRC,EAHa,GAIbC,8BAAoBN,ICWTO,MAZf,WACE,OACE,kBAAC,IAAD,CAAUJ,MAAOA,GACjB,yBAAK1G,UAAU,OACb,kBAACkG,EAAD,MACA,kBAACD,EAAD,SCDcc,QACW,cAA7B1G,OAAO2G,SAASC,UAEe,UAA7B5G,OAAO2G,SAASC,UAEhB5G,OAAO2G,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAAS9F,SAAS+F,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpE,MAAK,SAAAqE,GACjCA,EAAaC,kB","file":"static/js/main.a4bb2e57.chunk.js","sourcesContent":[" \r\n export const addVideoToScreen= (videoData)=>dispatch=>{localStorage.setItem(\"video\", JSON.stringify( videoData.video))\r\n     return dispatch({\r\n    payload:videoData,\r\n    type:\"addVideoToScreen\"\r\n\r\n})}\r\nexport const addVideosToQueue=(videosData)=>dispatch=>{\r\n    if(!videosData.videos.length)\r\n    {localStorage.removeItem(\"videos\")}\r\n    else\r\n\r\n    localStorage.setItem(\"videos\",JSON.stringify( videosData.videos))\r\n    \r\n    return dispatch({\r\n    payload:videosData,\r\n    type:\"addVideosToQueue\"\r\n\r\n})\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport  YouTube from \"react-youtube\"\r\n\r\nimport {addVideoToScreen} from \"../actions/videoAction\"\r\n\r\n\r\nclass VideoPlayer extends Component {\r\n    \r\n    render() { const opts = {\r\n      height: '450px',\r\n      width: '100%',\r\n      playerVars: { \r\n        autoplay: 1\r\n      }\r\n    };\r\n        return (\r\n            <div className=\"videoPlayer p-3\">\r\n                {!this.props.videoFlag ? <div className=\"text-center\">\r\n                    <h4>No video to play.</h4>\r\n                    <img src=\"https://image.flaticon.com/icons/png/512/2285/2285097.png\" alt=\"\" width=\"400px\"/>\r\n                </div> :\r\n                \r\n                <div>\r\n                  <button className=\"btn btn-warning remove\" onClick={()=>{\r\n                    if(window.confirm(\"Are You sure?\"))\r\n                    this.props.addVideoToScreen({\r\n                      video:\"\",\r\n                      videoFlag:false\r\n\r\n                    })\r\n                  }}>\r\n                    Remove From Screen\r\n\r\n                  </button>\r\n                   <YouTube\r\n        videoId={this.props.video.id}\r\n        opts={opts}\r\n        \r\n      onEnd={(e)=>{\r\n        \r\n\r\n        const currentVideo=this.props.video\r\n        const videos=this.props.videos\r\n       const indexCurrentVideo= videos.findIndex((video)=>{\r\n           \r\n\r\n       \r\n    \r\n    return currentVideo.id===video.id })\r\n       \r\n      \r\n\r\n       if(indexCurrentVideo!==videos.length-1)\r\n       {\r\n           \r\n           document.querySelector(\".sideBar\").scrollTo(0,148*(indexCurrentVideo+1))\r\n          \r\n           this.props.addVideoToScreen({video:videos[indexCurrentVideo+1]})\r\n       }\r\n       else{\r\n           this.props.addVideoToScreen({video:videos[0]})\r\n           document.querySelector(\".sideBar\").scrollTo(0,0)\r\n       }\r\n\r\n      }}/>\r\n                </div>\r\n\r\n                \r\n}\r\n               \r\n                \r\n            </div>\r\n        )\r\n    }\r\n    \r\n\r\n\r\n}\r\n\r\nconst mapStateToProps=(state)=>({\r\n    video:state.videoData.video,\r\n    videoFlag:state.videoData.videoFlag,\r\n    videos:state.videoData.videos\r\n   \r\n})\r\n\r\nexport default connect(mapStateToProps,{addVideoToScreen})(VideoPlayer)","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\n\r\nimport {addVideosToQueue,addVideoToScreen}   from \"../actions/videoAction\";\r\n\r\n\r\n class SideBar extends Component {\r\n     state={\r\n    error:false\r\n}\r\n\r\ndeleteVideo=(video)=>{ if(window.confirm(\"sire to delete a video ?\"))  {const remaningVideos=this.props.videos.filter((cVideo)=>cVideo.id!==video.id)\r\n    if(!remaningVideos.length){\r\n        \r\n\r\n        this.setState({\r\n            error:false\r\n        })\r\n        this.props.addVideoToScreen({\r\n            video:\"\",\r\n            videoFlag:false\r\n        })\r\n\r\n        this.props.addVideosToQueue({\r\n            videos:[],\r\n            queueFlag:false\r\n\r\n        })\r\n\r\n    }\r\n    else\r\nif(this.props.video){\r\n   \r\n if(this.props.video.id===video.id)\r\n{ \r\nthis.props.addVideosToQueue(\r\n  {videos:remaningVideos}\r\n)\r\n\r\nthis.props.addVideoToScreen({\r\n            video:\"\",\r\n            videoFlag:false\r\n        })\r\n}\r\n               \r\n else\r\n {\r\nthis.props.addVideosToQueue({\r\nvideos:remaningVideos\r\n \r\n\r\n })\r\n}}\r\n\r\n                                              \r\n\r\nelse{\r\nthis.props.addVideosToQueue({\r\nvideos:remaningVideos\r\n\r\n})}}}\r\n\r\n  validateYouTubeUrl=(youtubeUrl)=>\r\n{const url=youtubeUrl\r\n\r\n\r\nconst urlMain=String(url).substring(0,32)\r\nconst urlListIndex=url.search(\"&list=\")\r\nconst urlVideoId=url.substring(32,urlListIndex)\r\nconst urlListId=url.substring(urlListIndex+6,url.length)\r\nlet videoIdValid=false\r\nlet listIdValid=false\r\n\r\nif(urlMain===\"https://www.youtube.com/watch?v=\" && urlListIndex!==-1)\r\n{axios.get(`https://www.googleapis.com/youtube/v3/videos?part=snippet&id=${urlVideoId}&key=AIzaSyAqYC8NO0D83N1DyUQQYXznt0aegFEK-_M`).then((res1)=>{\r\n   \r\n    if(res1.data.items.length)\r\n    videoIdValid=true\r\n\r\n    axios.get(`https://www.googleapis.com/youtube/v3/playlistItems?part=snippet%2CcontentDetails&maxResults=25&playlistId=${urlListId}&key=AIzaSyAqYC8NO0D83N1DyUQQYXznt0aegFEK-_M`).then((res2)=>{\r\n        if(res2.data.items.length)\r\n        {\r\n         \r\n                \r\n                const dataVideo=res2.data.items\r\n              \r\n                const videosFetched=[]\r\n                dataVideo.forEach((data)=>{\r\n                    const videoToAdd={\r\n                    id:data.snippet.resourceId.videoId,\r\n                    title:data.snippet.title,\r\n                    img:data.snippet.thumbnails.high,\r\n                    channelTitle:data.snippet.channelTitle\r\n                }\r\n\r\n                videosFetched.push(videoToAdd)\r\n              \r\n                \r\n                \r\n\r\n                \r\n            })\r\n            this.props.addVideosToQueue({videos:[...this.props.videos,...videosFetched],queueFlag:true})\r\n            this.setState({\r\n                error:false\r\n            })\r\n\r\n        }\r\n\r\n   if(!listIdValid && !videoIdValid)\r\n{\r\n    this.setState({\r\n         error:true\r\n     }) }\r\n\r\n\r\n\r\n\r\n}).catch((err)=>{\r\n    this.setState({\r\n         error:true\r\n     }) \r\n})\r\n\r\n}\r\n)}\r\nelse\r\n {\r\n     this.setState({\r\n         error:true\r\n     }) \r\n}\r\n\r\n}                                           \r\n\r\n    \r\n    render() {\r\n        \r\n        \r\n        \r\n        \r\n        return (\r\n            <div className=\"sideBar\" style={{height:\"75vh\",\r\n    backgroundColor: \"rgb(224, 224, 224)\",\r\n    paddingBottom: \"5px\",\r\n    overflowY:\"scroll\"}}>\r\n                <div className=\"card p-2 d-block \">\r\n                   <div>\r\n                       <div className=\"d-inline-block\">\r\n                            <button className=\"btn btn-danger btn-sm mr-2 trash\" onClick={()=>{\r\n                                if(window.confirm(\"Sure to delete?\")){\r\n\r\n                                    this.setState({\r\n                                        error:false\r\n                                    })\r\n                                    this.props.addVideosToQueue({\r\n                                        videos:[],\r\n                                        queueFlag:false\r\n                                    })\r\n                                    this.props.addVideoToScreen({\r\n                                        video:{},\r\n                                        videoFlag:false\r\n                                    })\r\n                                }\r\n                            }}>Delete All</button>\r\n                       </div>\r\n{this.state.error ?<h3 className=\"my-4  alert alert-danger\">Invaid link</h3>:null}\r\n                       \r\n                       <h4 className=\"d-inline-block\">Music Queue</h4>\r\n                    \r\n                    \r\n                        <button className=\"btn btn-primary d-inline-block float-right\"  data-toggle=\"modal\" data-target=\"#exampleModal\">Add</button></div>\r\n\r\n                       \r\n                        \r\n                    \r\n                </div> <div className=\"display\">\r\n                    {!this.props.queueFlag ?<h5 className=\"bg-warning text-dark p-2 text-capitalize mx-2 mt-4 rounded\">No Music kindly add music</h5> : <div>\r\n                       \r\n                            {this.props.videos.map((video,key)=> <div className=\"p-1 card m-2\" key={key} >\r\n                                <div className=\"row m-0 p-1\" style={{cursor:\"pointer\"}} onClick={(e)=>{\r\n                                    if(!e.target.classList.contains(\"fa-times\") && \r\n                                    \r\n                                    !e.target.classList.contains(\"trash\") )\r\n                                    \r\n                                 {\r\n                                  this.props.addVideoToScreen({video:video,videoFlag:true})}\r\n                                }}>\r\n                                   \r\n                                        <div className=\"col-md-3 p-0 pr-2 mt-2\">\r\n                                        <img src={video.img.url} alt=\"\" width=\"100%\"\r\n                                        height=\"100%\"/>\r\n                                    </div>\r\n\r\n                                      <div className=\"col-md-9 p-0\">\r\n        <div className=\"mb-3\"><i className=\"fas fa-times text-danger float-right \" onClick={()=>this.deleteVideo(video)}></i></div>\r\n        <h6 className=\"text-secondary\">{video.title}</h6>\r\n        <p className=\"text-primary \" >{\" \"}{video.channelTitle}</p>\r\n        {this.props.video.id ? \r\n        this.props.video.id===video.id ?\r\n\r\n        <h6  className=\"text-success playingStatus\">Currently Playing</h6>: null  :  null}\r\n </div>\r\n                                    </div>\r\n                                    \r\n                                \r\n\r\n\r\n                            </div>)}\r\n                            \r\n                        \r\n                        \r\n                        </div>}\r\n                            \r\n                        </div>\r\n                        <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div className=\"modal-dialog\" role=\"document\">\r\n    <div className=\"modal-content\">\r\n      <div className=\"modal-header\">\r\n        <h5 className=\"modal-title\" id=\"exampleModalLabel\">Add Youtube Video URL</h5>\r\n        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\"\r\n          >&times;</span>\r\n        </button>\r\n      </div>\r\n      <div className=\"modal-body\">\r\n       <input type=\"text\" className=\"form-control videoUrl\" placeholder=\"Give Youtube URL\" />\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n          \r\n         \r\n          \r\n        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n        <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\" onClick={()=>{\r\n            let url=document.querySelector(\".videoUrl\").value\r\n\r\n            this.validateYouTubeUrl(url)\r\n           \r\n          \r\n           \r\n         }}\r\n        >Add URL</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount(){\r\n       \r\n\r\n        if(\"videos\" in localStorage)\r\n\r\n       {let videosLocalStorage= \r\n         localStorage.getItem(\"videos\")\r\n       let videoLocalStorage= localStorage.getItem(\"video\")\r\n       \r\n           if(videosLocalStorage)\r\n           {\r\n               this.props.addVideosToQueue(\r\n                   {videos:\r\n                   JSON.parse(videosLocalStorage),\r\n                   queueFlag:true}\r\n               )\r\n           }\r\n           \r\n           \r\n\r\n            if(videoLocalStorage &&     JSON.parse(videoLocalStorage)!==\"\")\r\n            \r\n           {\r\n\r\n               this.props.addVideoToScreen(\r\n                   {video:\r\n                    JSON.parse(videoLocalStorage),\r\n                   videoFlag:true}\r\n               )\r\n           }\r\n           \r\n       }\r\n        \r\n            \r\n        \r\n\r\n        else\r\n        {localStorage.setItem(\"videos\",[])\r\n        localStorage.setItem(\"video\",\"\")}\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    \r\n    return {\r\n    videos:state.videoData.videos,\r\n    queueFlag:state.videoData.queueFlag,\r\n    video:state.videoData.video\r\n}}\r\n\r\nexport default connect(mapStateToProps,{addVideosToQueue,addVideoToScreen})(SideBar)\r\n","import React from 'react'\r\nimport VideoPlayer from './VideoPlayer'\r\nimport SideBar from './SideBar'\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div  className=\"home p-4\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8\">\r\n                    <VideoPlayer />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n\r\n                    <SideBar style={{height:\"75vh\",\r\n    backgroundColor: \"rgb(224, 224, 224)\",\r\n    paddingBottom: \"5px\",\r\n    overflowY:\"scroll\"}}/>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Navbar() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger p-4\">\r\n\r\n            <a href=\"#?\" className=\"navbar-brand\">\r\n                Video Player\r\n            </a>\r\n        </nav>\r\n    )\r\n}\r\n","\r\nconst initialState={\r\n    video:{},\r\n    videoFlag:false,\r\n    videos:[],\r\n    queueFlag:false\r\n}\r\n\r\nexport default (state=initialState,action)=>{\r\n\r\n    switch(action.type){\r\n        case \"addVideoToScreen\": return ({...state,...action.payload})\r\n\r\n        case \"addVideosToQueue\": return ({...state,...action.payload})\r\n        \r\n        default: return state\r\n\r\n    }\r\n}","import {combineReducers} from 'redux'\r\n\r\nimport videoScreenReducer from \"./videoScreenReducer\" \r\n\r\nexport default combineReducers({\r\n    videoData:videoScreenReducer,\r\n   \r\n\r\n})","import {createStore,applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from \"./reducers/rootReducer\"\r\nimport {composeWithDevTools} from \"redux-devtools-extension\"\r\n\r\nlet initialState={}\r\nconst middleware=applyMiddleware(thunk)\r\nconst store=createStore(\r\n    rootReducer,initialState,\r\n    composeWithDevTools(middleware)\r\n)\r\nexport default store\r\n","import React from 'react';\n\n\nimport Home from './components/Home';\nimport Navbar from './components/Navbar';\nimport {Provider} from 'react-redux'\nimport store from \"./store\"\n\nfunction App() {\n  return (\n    <Provider store={store}>\n    <div className=\"App\">\n      <Navbar />\n      <Home />\n      \n    </div>\n    </Provider >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}